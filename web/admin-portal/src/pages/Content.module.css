.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0;
}

.header {
  margin-bottom: 2rem;
  text-align: center;
}

.title {
  font-size: 2.5rem;
  font-weight: 700;
  background: linear-gradient(135deg, var(--accent), var(--accent-2));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin: 0 0 0.5rem 0;
  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.subtitle {
  font-size: 1.125rem;
  color: var(--muted);
  margin: 0;
  font-weight: 500;
}

.loadingCard {
  background: linear-gradient(135deg, var(--card), var(--panel));
  border-radius: 16px;
  padding: 3rem;
  text-align: center;
  box-shadow: var(--shadow);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.loadingSpinner {
  width: 48px;
  height: 48px;
  border: 4px solid rgba(43, 224, 144, 0.2);
  border-top: 4px solid var(--accent);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin: 0 auto 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.errorMessage,
.successMessage {
  padding: 1rem 1.5rem;
  border-radius: var(--radius);
  margin-bottom: 2rem;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  font-weight: 500;
  box-shadow: var(--shadow);
}

.errorMessage {
  background: linear-gradient(135deg, rgba(255, 107, 107, 0.1), rgba(255, 107, 107, 0.05));
  border: 1px solid var(--error);
  color: var(--error);
}

.successMessage {
  background: linear-gradient(135deg, rgba(43, 224, 144, 0.1), rgba(43, 224, 144, 0.05));
  border: 1px solid var(--ok);
  color: var(--ok);
}

.errorIcon,
.successIcon {
  font-size: 1.25rem;
  flex-shrink: 0;
}

/* Toolbar */
.toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding: 1.5rem;
  background: linear-gradient(135deg, var(--card), var(--panel));
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.stats {
  display: flex;
  gap: 2rem;
}

.statItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
}

.statValue {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--accent);
}

.statLabel {
  font-size: 0.75rem;
  color: var(--muted);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
}

.addButton {
  background: linear-gradient(135deg, var(--accent), var(--accent-2));
  color: var(--text);
  border: none;
  border-radius: var(--radius);
  padding: 0.75rem 1.5rem;
  font-family: var(--font);
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  position: relative;
  overflow: hidden;
}

.addButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.addButton:hover::before {
  left: 100%;
}

.addButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(43, 224, 144, 0.4);
}

.addIcon {
  font-size: 1.25rem;
  font-weight: bold;
}

/* Form Modal */
.formModal {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(8px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
  padding: 1rem;
  animation: modalEnter 0.3s ease-out;
}

@keyframes modalEnter {
  from {
    opacity: 0;
    backdrop-filter: blur(0px);
  }
  to {
    opacity: 1;
    backdrop-filter: blur(8px);
  }
}

.formCard {
  background: linear-gradient(135deg, var(--card), var(--panel));
  border-radius: 16px;
  box-shadow: 0 24px 48px rgba(0, 0, 0, 0.4), 0 0 0 1px rgba(255, 255, 255, 0.1);
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
  animation: cardEnter 0.3s ease-out;
  border: 1px solid rgba(43, 224, 144, 0.2);
}

@keyframes cardEnter {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.formHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem 2rem 1rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.formTitle {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text);
  margin: 0;
  background: linear-gradient(135deg, var(--accent), var(--accent-2));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.closeButton {
  background: transparent;
  color: var(--muted);
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 50%;
  transition: all 0.2s ease;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.1);
  color: var(--text);
  transform: scale(1.1);
}

.form {
  padding: 2rem;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.label {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.input,
.select,
.textarea {
  background: var(--panel);
  color: var(--text);
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--radius);
  padding: 1rem;
  font-family: var(--font);
  font-size: 1rem;
  transition: all 0.3s ease;
  width: 100%;
  box-sizing: border-box;
}

.input::placeholder,
.textarea::placeholder {
  color: var(--muted);
  font-style: italic;
}

.input:focus,
.select:focus,
.textarea:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 4px rgba(43, 224, 144, 0.1), 0 8px 24px rgba(43, 224, 144, 0.15);
  transform: translateY(-1px);
}

.textarea {
  resize: vertical;
  min-height: 100px;
}

.charCount {
  font-size: 0.75rem;
  color: var(--muted);
  text-align: right;
  margin-top: 0.25rem;
}

.formActions {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  margin-top: 2rem;
  padding-top: 2rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.cancelButton,
.saveButton {
  padding: 1rem 2rem;
  border: none;
  border-radius: var(--radius);
  font-family: var(--font);
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 120px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.cancelButton {
  background: var(--panel);
  color: var(--muted);
  border: 2px solid rgba(255, 255, 255, 0.1);
}

.cancelButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.05);
  color: var(--text);
  border-color: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.saveButton {
  background: linear-gradient(135deg, var(--accent), var(--accent-2));
  color: var(--text);
  position: relative;
  overflow: hidden;
}

.saveButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.saveButton:hover:not(:disabled)::before {
  left: 100%;
}

.saveButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(43, 224, 144, 0.4);
}

.saveButton:disabled,
.cancelButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.saveIcon {
  font-size: 1.25rem;
}

.saveSpinner {
  width: 16px;
  height: 16px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid var(--text);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Content List */
.contentList {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.emptyState {
  background: linear-gradient(135deg, var(--card), var(--panel));
  border-radius: 16px;
  padding: 4rem 2rem;
  text-align: center;
  box-shadow: var(--shadow);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.emptyIcon {
  font-size: 4rem;
  margin-bottom: 1rem;
  opacity: 0.5;
}

.emptyTitle {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--text);
  margin: 0 0 0.5rem 0;
}

.emptyDescription {
  font-size: 1rem;
  color: var(--muted);
  margin: 0 0 2rem 0;
}

.emptyButton {
  background: linear-gradient(135deg, var(--accent), var(--accent-2));
  color: var(--text);
  border: none;
  border-radius: var(--radius);
  padding: 1rem 2rem;
  font-family: var(--font);
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.emptyButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(43, 224, 144, 0.4);
}

/* Content Cards */
.contentCard {
  background: linear-gradient(135deg, var(--card), var(--panel));
  border-radius: 16px;
  padding: 1.5rem;
  box-shadow: var(--shadow);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s ease;
}

.contentCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 16px 48px rgba(0, 0, 0, 0.4);
}

.contentHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
}

.contentMeta {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

.typeIndicator {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  flex-shrink: 0;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.contentInfo {
  flex: 1;
}

.contentTitle {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text);
  margin: 0 0 0.5rem 0;
}

.contentDetails {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.contentType,
.contentPriority,
.contentAudience {
  font-size: 0.75rem;
  padding: 0.25rem 0.75rem;
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.1);
  color: var(--muted);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
}

.contentStatus {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.statusBadge {
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.statusBadge.active {
  background: linear-gradient(135deg, var(--ok), rgba(43, 224, 144, 0.8));
  color: var(--text);
}

.statusBadge.inactive {
  background: linear-gradient(135deg, var(--muted), rgba(154, 165, 177, 0.8));
  color: var(--text);
}

.expiredBadge {
  padding: 0.25rem 0.75rem;
  border-radius: 12px;
  background: linear-gradient(135deg, var(--error), rgba(255, 107, 107, 0.8));
  color: var(--text);
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.contentBody {
  margin-bottom: 1.5rem;
}

.contentMessage {
  font-size: 1rem;
  color: var(--text);
  line-height: 1.6;
  margin: 0;
}

.contentFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.contentDates {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.dateItem {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.dateLabel {
  font-size: 0.75rem;
  color: var(--muted);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
}

.dateValue {
  font-size: 0.875rem;
  color: var(--text);
  font-weight: 500;
}

.dateValue.expired {
  color: var(--error);
}

.contentActions {
  display: flex;
  gap: 0.5rem;
}

.toggleButton,
.editButton,
.deleteButton {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: var(--radius);
  font-family: var(--font);
  font-size: 0.75rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.toggleButton.activate {
  background: linear-gradient(135deg, var(--ok), rgba(43, 224, 144, 0.8));
  color: var(--text);
}

.toggleButton.deactivate {
  background: linear-gradient(135deg, var(--warn), rgba(255, 209, 102, 0.8));
  color: var(--bg);
}

.editButton {
  background: linear-gradient(135deg, var(--accent-2), var(--accent));
  color: var(--text);
}

.deleteButton {
  background: linear-gradient(135deg, var(--error), rgba(255, 107, 107, 0.8));
  color: var(--text);
}

.toggleButton:hover,
.editButton:hover,
.deleteButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

/* Responsive Design */
@media (max-width: 768px) {
  .container {
    padding: 0 0.5rem;
  }
  
  .title {
    font-size: 2rem;
  }
  
  .subtitle {
    font-size: 1rem;
  }
  
  .toolbar {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch;
  }
  
  .stats {
    justify-content: center;
  }
  
  .addButton {
    width: 100%;
    justify-content: center;
  }
  
  .formModal {
    padding: 0.5rem;
  }
  
  .formCard {
    max-height: 95vh;
  }
  
  .formHeader {
    padding: 1.5rem 1.5rem 1rem;
  }
  
  .form {
    padding: 1.5rem;
  }
  
  .formGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .formActions {
    flex-direction: column-reverse;
    gap: 0.75rem;
  }
  
  .cancelButton,
  .saveButton {
    width: 100%;
    justify-content: center;
  }
  
  .contentCard {
    padding: 1rem;
  }
  
  .contentHeader {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch;
  }
  
  .contentMeta {
    align-items: center;
  }
  
  .contentFooter {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch;
  }
  
  .contentActions {
    justify-content: space-between;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .input,
  .select,
  .textarea {
    border-width: 3px;
  }
  
  .contentCard {
    border-width: 2px;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .contentCard,
  .input,
  .select,
  .textarea,
  .addButton,
  .saveButton,
  .toggleButton,
  .editButton,
  .deleteButton,
  .loadingSpinner {
    transition: none;
    animation: none;
  }
  
  .addButton::before,
  .saveButton::before {
    display: none;
  }
}